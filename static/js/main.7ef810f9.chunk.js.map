{"version":3,"sources":["api/api.js","components/card.js","pages/list.js","pages/detail.js","App.js","reportWebVitals.js","index.js"],"names":["url","Meta","Card","Carditem","name","image","hoverable","style","margin","maxWidth","cover","alt","src","title","axios","_axios","create","baseURL","timeout","List","useState","data","setdata","page","setpage","hasMore","sethasMore","account","setaccount","fetchList","a","get","params","format","owner","offset","limit","then","res","assets","length","oldArray","concat","catch","error","console","detectEthereumProvider","window","ethereum","request","method","accounts","useEffect","className","type","shape","size","onClick","connecteth","dataLength","next","loader","endMessage","textAlign","justify","map","item","md","flex","to","asset_contract","address","token_id","image_preview_url","Detail","location","useLocation","history","useHistory","handleClick","goBack","fetchDetail","useCallback","pathname","split","err","log","onBack","image_url","description","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ef810f9.chunk.js","sourcesContent":["import _axios from \"axios\";\n\nconst axios = (url) => {\n  const instance = _axios.create({\n    baseURL: url || \"https://api.opensea.io/api/v1/\",\n    timeout: 10000,\n  });\n\n  return instance;\n};\n\nexport { axios };\nexport default axios();\n","import { Card } from \"antd\";\n\nconst { Meta } = Card;\n\nexport const Carditem = ({ name = \"unkonw\", image = \"\" }) => {\n  return (\n    <Card\n      hoverable\n      style={{ margin: 5, maxWidth: \"40vw\" }}\n      cover={<img alt={name} src={image} />}\n    >\n      <Meta title={name} />\n    </Card>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\n\n// component\nimport { Carditem } from \"../components/card.js\";\n\n// api\nimport axios from \"../api/api.js\";\n\n// styles\nimport { Col, Row, Button } from \"antd\";\n\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\nfunction List() {\n  const [data, setdata] = useState([]);\n  const [page, setpage] = useState(0);\n  const [hasMore, sethasMore] = useState(true);\n  const [account, setaccount] = useState(\n    \"0x960DE9907A2e2f5363646d48D7FB675Cd2892e91\"\n  );\n\n  useEffect(() => {\n    setpage(0);\n    setdata([]);\n    fetchList();\n  }, [account]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  async function fetchList() {\n    axios\n      .get(\"/assets\", {\n        params: {\n          format: \"json\",\n          owner: account,\n          offset: page * 20,\n          limit: 20,\n        },\n      })\n      .then((res) => {\n        if (!!res.data.assets.length) {\n          setdata((oldArray) => oldArray.concat(res.data.assets));\n          setpage(page + 1);\n        } else {\n          sethasMore(false);\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  async function connecteth() {\n    const provider = await detectEthereumProvider();\n    if (provider) {\n      const accounts = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      const account = accounts[0];\n      setaccount(account);\n    } else {\n      console.error(\"Please install MetaMask!\");\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <Button\n        type=\"primary\"\n        shape=\"round\"\n        size={\"large\"}\n        onClick={() => {\n          connecteth();\n        }}\n      >\n        connect MetaMask\n      </Button>\n\n      <InfiniteScroll\n        dataLength={data.length}\n        next={fetchList}\n        hasMore={hasMore}\n        loader={<h4>Loading...</h4>}\n        endMessage={\n          <p style={{ textAlign: \"center\" }}>\n            <b>到底囉！</b>\n          </p>\n        }\n      >\n        <Row justify=\"center\">\n          {data.map((item) => {\n            return (\n              <Col\n                md={12}\n                key={`${item.asset_contract.address}/${item.token_id}`}\n                flex=\"center\"\n              >\n                <Link\n                  to={`/detail/${item.asset_contract.address}/${item.token_id}`}\n                >\n                  <Carditem name={item.name} image={item.image_preview_url} />\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </InfiniteScroll>\n    </div>\n  );\n}\n\nexport default List;\n","import { useEffect, useCallback, useState } from \"react\";\nimport React from \"react\";\nimport { useLocation, useHistory } from \"react-router-dom\";\nimport { Button, Skeleton } from \"antd\";\n\n// api\nimport axios from \"../api/api.js\";\n\nimport { PageHeader } from \"antd\";\n\nconst Detail = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [data, setdata] = useState([]);\n\n  function handleClick() {\n    history.goBack();\n  }\n\n  const fetchDetail = useCallback(() => {\n    axios\n      .get(\n        `/asset/${location.pathname.split(\"/\")[2]}/${\n          location.pathname.split(\"/\")[3]\n        }`\n      )\n      .then((res) => {\n        setdata(res.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, [location]);\n\n  useEffect(() => {\n    fetchDetail();\n  }, [fetchDetail]);\n\n  return (\n    <div className=\"datail\">\n      <PageHeader\n        className=\"site-page-header\"\n        onBack={() => handleClick()}\n        title={data.name}\n      />\n      {!data.name ? (\n        <Skeleton />\n      ) : (\n        <>\n          <img className=\"detail_img\" src={data.image_url} alt={data.name} />\n          <div className=\"detail_content\">\n            <h1>{data.name}</h1>\n            <p>{data.description}</p>\n            <Button\n              type=\"primary\"\n              shape=\"round\"\n              size={\"large\"}\n              onClick={() => {\n                handleClick();\n              }}\n            >\n              Permalink\n            </Button>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Detail;\n","import { Route, HashRouter } from \"react-router-dom\";\n\n// styles\nimport \"antd/dist/antd.css\";\n\n// pages\nimport List from \"./pages/list.js\";\nimport Detail from \"./pages/detail.js\";\n\nfunction App() {\n  return (\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Route exact path=\"/\" component={List} />\n      <Route path=\"/detail/:contractid/:token\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}